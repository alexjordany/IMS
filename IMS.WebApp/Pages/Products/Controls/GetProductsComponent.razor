@using IMS.Application.Features.Products.Queries.GetProductsByName
@inject IMediator _mediator

<div class="input-group mb-3">
    <FluentTextField Placeholder="Type here the name of the product to search" Size=50 @bind-value="productNameToSearch"></FluentTextField>
    <FluentButton Appearance=Appearance.Outline @onclick="@(async()=> {await GetProducts();})">View</FluentButton>
</div>

@code {
    private string? productNameToSearch;

    [Parameter]
    public EventCallback<List<GetProductsByNameVM>> OnSearchProducts{ get; set; }

    private async Task<ActionResult<List<GetProductsByNameVM>>> GetProducts()
    {
        var model = await _mediator.Send(new GetProductsByNameQuery { Name = productNameToSearch });
        await OnSearchProducts.InvokeAsync(model);
        return model;
    }
}
